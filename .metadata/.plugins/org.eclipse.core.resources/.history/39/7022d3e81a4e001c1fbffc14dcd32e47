package lambdas;

import java.text.DecimalFormat;
import java.util.function.BinaryOperator;
import java.util.function.UnaryOperator;

public class Desafio {

	public static void main(String[] args) {
		Produto p = new Produto ("iPad",3235.89,0.13);
	BinaryOperator <Double> precoComDesconto = 
			(preco,desconto) -> {
				double descontoFinal = preco*desconto;
				return preco-descontoFinal;
			};
			
				
	System.out.println(precoComDesconto.apply
			(p.preco,p.desconto));
	
		UnaryOperator<Double> imposto = 
				preco -> preco>=2500?preco + (preco*0.085):preco;

	
	System.out.println(imposto.apply(p.preco));
	
	UnaryOperator<Double> frete = preco -> preco >=3000? preco +100.0:preco + 50.0;
 
	double precoFinal = precoComDesconto
	.andThen(imposto)
	.andThen(frete)
	.apply(p.preco, p.desconto);

	DecimalFormat arrendondar = new DecimalFormat ("###.##");
	System.out.println(arrendondar.format(precoFinal));
	
	
	
	
//		DoubleBinaryOperator precoComDesconto = 
//				(preco,desconto) -> {
//					double descontoFinal = preco*desconto;
//					return preco-descontoFinal;
//				};
	
//System.out.println(precoComDesconto.apply
//		(p.preco,p.desconto));	
				
//		BiFunction<Double,Double,Double> precoComDesconto = 
//				(preco,desconto) -> {
//					double descontoFinal = preco*desconto;
//					return preco-descontoFinal;
//				};
//				
//			System.out.println(precoComDesconto.apply(p.preco,p.desconto));
	}

}
